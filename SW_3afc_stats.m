% ANOVA: do stats

data = load('class_3afc_data.mat'); % load n subj x 18 conditon data

conditions1 = {...
    'skw_ani';...
    'skw_tec';...
    'skw_env';...

    'hum_ani';...
    'hum_tec';...
    'hum_env';...

    'ani_ani';...
    'ani_tec';...
    'ani_env';...

    'env_ani';...
    'env_tec';...
    'env_env';...

    'ext_ani';...
    'ext_tec';...
    'ext_env';...

    'mus_ani';...
    'mus_tec';...
    'mus_env';...
    };

conditions2 = {...
    'skw','ani';...
    'skw','tec';...
    'skw','env';...

    'hum','ani';...
    'hum','tec';...
    'hum','env';...

    'ani','ani';...
    'ani','tec';...
    'ani','env';...

    'env','ani';...
    'env','tec';...
    'env','env';...

    'ext','ani';...
    'ext','tec';...
    'ext','env';...

    'mus','ani';...
    'mus','tec';...
    'mus','env';...
    };

data    = array2table(data,'VariableNames',conditions1);
within  = cell2table(conditions2,...
    'VariableNames',{'sound','class'});
model   = fitrm(data,'skw_ani-mus_env~1','WithinDesign',within);
spheric = mauchly(model) % Mauchly test for sphericity
epscorr = epsilon(model) % epsilon correction
results = ranova(model,'WithinModel','sound*class')
multcompare(model,'sound')
multcompare(model,'class')
multcompare(model,'sound','By','class')
multcompare(model,'class','By','sound')

